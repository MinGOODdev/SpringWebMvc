<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.spring.article.dao.ArticleDao">

    <insert id="createArticle">
        INSERT INTO tb_article (articleNo, title, content, writer, regDate, viewCnt)
        VALUES (#{articleNo}, #{title}, #{content}, #{writer}, #{regDate}, #{viewCnt})
    </insert>

    <select id="findByArticleNo" resultType="Article">
        SELECT articleNo, title, content, writer, regDate, viewCnt
        FROM tb_article
        WHERE articleNo = #{articleNo}
    </select>

    <update id="updateArticle">
        UPDATE tb_article
        SET
          title = #{title},
          content = #{content}
        WHERE articleNo = #{articleNo}
    </update>

    <delete id="deleteArticle">
        DELETE FROM tb_article
        WHERE articleNo = #{articleNo}
    </delete>

    <select id="findAllArticle" resultType="Article">
        SELECT articleNo, title, content, writer, regDate, viewCnt
        FROM tb_article
        WHERE articleNo > 0
        ORDER BY articleNo DESC, regDate DESC
    </select>

    <select id="findAllArticlePaging" resultType="Article">
        SELECT articleNo, title, content, writer, regDate, viewCnt
        FROM tb_article
        WHERE articleNo > 0
        ORDER BY articleNo DESC, regDate DESC
        LIMIT #{pageStart}, #{perPageNum}
    </select>

    <select id="countArticles" resultType="int">
        SELECT COUNT(articleNo)
        FROM tb_article
        WHERE articleNo > 0
    </select>

    <!--
    Java field name과 Database column name이 다를 경우
    아래와 같이 resultMap을 만들고 resultType에 resultMap id를 넣어주면 됩니다.
    -->
    <!--<resultMap id="ArticleResultMap" type="Article">-->
    <!--<id property="articleNo" column="db_column1"/>-->
    <!--<result property="title" column="db_column2"/>-->
    <!--</resultMap>-->


    <select id="findAllArticleSearch" resultType="Article">
        SELECT articleNo, title, content, writer, regDate, viewCnt
        FROM tb_article
        WHERE articleNo > 0

        <!--
        SQL 문이 중복되어 사용될 경우 include를 통해 SQL 중복을 제거하고,
        SQL의 재사용이 가능하도록 합니다.
        -->
        <include refid="search"/>

        ORDER BY articleNo DESC, regDate DESC
        LIMIT #{pageStart}, #{perPageNum}
    </select>

    <select id="countSearchedArticles" resultType="int">
        SELECT COUNT(articleNo)
        FROM tb_article
        WHERE articleNo > 0
        <include refid="search"/>
    </select>

    <sql id="search">
        <if test="searchType != null">
            <if test="searchType == 'title'.toString()">
                AND title LIKE CONCAT('%', #{keyword}, '%')
            </if>
            <if test="searchType == 'content'.toString()">
                AND title LIKE CONCAT('%', #{keyword}, '%')
            </if>
            <if test="searchType == 'writer'.toString()">
                AND title LIKE CONCAT('%', #{keyword}, '%')
            </if>
            <if test="searchType == 'titleContent'.toString()">
                AND (
                    title LIKE CONCAT('%', #{keyword}, '%')
                    OR content LIKE CONCAT('%', #{keyword}, '%')
                )
            </if>
            <if test="searchType == 'contentWriter'.toString()">
                AND (
                    content LIKE CONCAT('%', #{keyword}, '%')
                    OR writer LIKE CONCAT('%', #{keyword}, '%')
                )
            </if>
            <if test="searchType == 'titleContentWriter'.toString()">
                AND (
                    title LIKE CONCAT('%', #{keyword}, '%')
                    OR content LIKE CONCAT('%', #{keyword}, '%')
                    OR writer LIKE CONCAT('%', #{keyword}, '%')
                )
            </if>
        </if>
    </sql>

</mapper>